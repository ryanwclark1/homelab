services:
  # Gluetun - VPN Client for Docker Containers and More
  # Gluetun only for use by torrent clients + on demand lan devices.
  # Arr apps do not need VPN (not recommended), unless you have ISP/country restrictions.
  gluetun:
    image: qmcgaw/gluetun:${GLUETUN_TAG:-latest}
    container_name: gluetun
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["core", "vpn", "all", "downloads"]
    extra_hosts:
      - "postgres:10.10.201.32"
    networks:
      - arr_net
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    healthcheck:
      test: ["CMD", "/gluetun-entrypoint", "healthcheck"]
      interval: 5s
      timeout: 5s
      start_period: 10s
      retries: 1
    ports:
      # Exposing qBittorrent through Docker Host LAN IP
      - mode: ingress
        target: "${QBIT_PORT:-8080}"
        published: "${QBIT_PORT:-8080}"
        protocol: tcp
      - 6881:6881
      - 6881:6881/udp
      - mode: ingress
        target: 8000
        published: 8001
        protocol: tcp
    #   - 8888:8888/tcp # HTTP proxy
    #   - 8388:8388/tcp # Shadowsocks
    #   - 8388:8388/udp # Shadowsocks
      # BitMagnet API and WebUI port:
      - mode: ingress
        target: "${BITMAG_PORT:-3333}"
        published: "${BITMAG_PORT:-3333}"
        protocol: tcp
      # BitMagnet BitTorrent ports:
      - mode: ingress
        target: "${BITMAG_BT_PORT:-3334}"
        published: "${BITMAG_BT_PORT:-3334}"
        protocol: tcp
      - mode: ingress
        target: "${BITMAG_BT_PORT:-3334}"
        published: "${BITMAG_BT_PORT:-3334}"
        protocol: udp
    volumes:
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: ${COMMON_CONFIG_PATH}/gluetun
        target: /config
        bind:
          create_host_path: true
    environment:
      PGID: ${PGID:-1000}
      PUID: ${PUID:-1000}
      TZ: ${TZ:-Etc/UTC}
      # Wireguard
      VPN_SERVICE_PROVIDER: ${VPN_PROVIDER:-nordvpn}
      VPN_TYPE: ${VPN_TYPE:-wireguard}
      WIREGUARD_PRIVATE_KEY: ${VPN_KEY}
      # WIREGUARD_ADDRESSES: ${WIREGUARD_ADDRESSES:-10.14.0.2/16}
      SERVER_COUNTRIES: Netherlands
      # # OpenVPN
      # VPN_SERVICE_PROVIDER: nordvpn
      # VPN_TYPE: openvpn
      # OPENVPN_USER: $NORDVPN_USERNAME
      # OPENVPN_PASSWORD: $NORDVPN_PASSWORD
      DOT: ${GLUETUN_DOT:-"on"}
      # HTTP_CONTROL_SERVER_ADDRESS: ${GLUETUN_HTTP_CONTROL_SERVER_ADDRESS:-8001}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.qbit-gluetun.entrypoints=web"
      - "traefik.http.routers.qbit-gluetun.rule=Host(`qbit.$DOMAINNAME`)"
      - "traefik.http.middlewares.qbit-gluetun-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.qbit-gluetun.middlewares=qbit-gluetun-https-redirect"
      - "traefik.http.routers.qbit-gluetun-secure.entrypoints=websecure"
      - "traefik.http.routers.qbit-gluetun-secure.rule=Host(`qbit.$DOMAINNAME`)"
      - "traefik.http.routers.qbit-gluetun-secure.tls=true"
      - "traefik.http.routers.qbit-gluetun-secure.service=qbit-gluetun"
      - "traefik.http.services.qbit-gluetun.loadbalancer.server.scheme=https"
      - "traefik.http.services.qbit-gluetun.loadbalancer.server.port=8080"
      - "traefik.docker.network=arr_net"


      # HTTP Routers
      # - "traefik.http.routers.gluetun-qbittorrent-rtr.entrypoints=websecure"
      # - "traefik.http.routers.gluetun-qbittorrent-rtr.rule=Host(`qbit.$DOMAINNAME`)" # qBittorrent
      # Middlewares
      # - "traefik.http.routers.gluetun-qbittorrent-rtr.middlewares=chain-basic-auth@file" # For Basic HTTP Authentication
      # - "traefik.http.routers.gluetun-qbittorrent-rtr.middlewares=chain-oauth@file" # qBittorrent
      # HTTP Services
      # - "traefik.http.routers.gluetun-qbittorrent-rtr.service=gluetun-svc" # qBittorrent
      # - "traefik.http.services.gluetun-svc.loadbalancer.server.port=8080" # qBittorrent