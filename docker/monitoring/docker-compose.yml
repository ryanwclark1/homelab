name: monitoring
services:
  prometheus:
    image: prom/prometheus:v2.53.1
    container_name: prometheus
    volumes:
      - type: bind
        source: ./prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
      - type: volume
        source: prometheus_data
        target: /prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
    #     links:
    #       - cadvisor:cadvisor
    #       - alertmanager:alertmanager
    # #      - pushgateway:pushgateway
    #     depends_on:
    #       - cadvisor
    # #      - pushgateway
    #     networks:
    #       - back-tier
    restart: always
  #    deploy:
  #      placement:
  #        constraints:
  #          - node.hostname == ${HOSTNAME}

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    ports:
      - 9093:9093
    # volumes:
    #   - "./alertmanager/:/etc/alertmanager/"
    # command:
    #   - "--config.file=/etc/alertmanager/config.yml"
    #   - "--storage.path=/alertmanager"
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    restart: always

  graphite-exporter:
    image: prom/graphite-exporter:v0.10.0
    container_name: graphite-exporter
    ports:
      - 9108:9108
      - 9109:9109
      - 9109:9109/udp
    restart: always

  grafana:
    image: grafana/grafana:11.1.0-ubuntu
    container_name: grafana
    ports:
      - 3000:3000
    # volumes:
    #   - type: bind
    #     source: ./grafana
    #     target: /var/lib/grafana
    restart: always

volumes:
  prometheus_data:
    external: true
    name: prometheus_data
