name: monitoring
services:
  prometheus:
    image: prom/prometheus:v2.53.1
    container_name: prometheus
    volumes:
      - type: bind
        source: ./prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
      - type: volume
        source: prometheus_data
        target: /prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - 9090:9090
    #     links:
    #       - cadvisor:cadvisor
    #       - alertmanager:alertmanager
    # #      - pushgateway:pushgateway
    #     depends_on:
    #       - cadvisor
    # #      - pushgateway
    #     networks:
    #       - back-tier
    restart: always
  #    deploy:
  #      placement:
  #        constraints:
  #          - node.hostname == ${HOSTNAME}

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    ports:
      - 9093:9093
    # volumes:
    #   - "./alertmanager/:/etc/alertmanager/"
    # command:
    #   - "--config.file=/etc/alertmanager/config.yml"
    #   - "--storage.path=/alertmanager"
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /etc/machine-id:/etc/machine-id:ro
    ports:
      - 8080:8080
    restart: always

  graphite-exporter:
    image: prom/graphite-exporter:v0.15.1
    container_name: graphite-exporter
    volumes:
      - type: bind
        source: ./graphite-exporter/graphite_mapping.conf
        target: /tmp/graphite_mapping.conf
    command:
      - --graphite.mapping-config=/tmp/graphite_mapping.conf
      - --graphite.listen-address=:2003
    ports:
      - 9108:9108
      - 2003:2003/tcp
      - 2003:2003/udp
    restart: always

  graphite-exporter2:
    image: prom/graphite-exporter:v0.15.1
    container_name: graphite-exporter2
    # volumes:
    #   - type: bind
    #     source: ./graphite-exporter/graphite_mapping.conf
    #     target: /tmp/graphite_mapping.conf
    command:
      # - --graphite.mapping-config=/tmp/graphite_mapping.conf
      - --graphite.listen-address=:2004
      - --log.level=debug
    ports:
      - 9109:9108
      - 2004:2003/tcp
      - 2004:2003/udp
    restart: always

  grafana:
    image: grafana/grafana:11.1.0-ubuntu
    container_name: grafana
    ports:
      - 3000:3000
    # volumes:
    #   - type: bind
    #     source: ./grafana
    #     target: /var/lib/grafana
    restart: always

  unpoller:
    restart: always
    image: ghcr.io/unpoller/unpoller:${POLLER_TAG}
    environment:
      - UP_UNIFI_DYNAMIC=${UNIFI_DYNAMIC:-false}
      - UP_UNIFI_DEFAULT_USER=${UNIFI_USER:-admin}
      - UP_UNIFI_DEFAULT_PASS=${UNIFI_PASS:-password123}
      - UP_UNIFI_DEFAULT_URL=${UNIFI_URL:-https://unifi:8443}
      - UP_UNIFI_DEFAULT_SAVE_SITES=${UNIFI_SAVE_SITES:-true}
      - UP_UNIFI_DEFAULT_SAVE_DPI=${POLLER_SAVE_DPI:-true}
      - UP_POLLER_DEBUG=${POLLER_DEBUG:-true}
      - UP_POLLER_QUIET=${POLLER_QUIET:true}
      - UP_PROMETHEUS_DISABLE=${PROMETHEUS_DISABLE:-false}
      - UP_PROMETHEUS_NAMESPACE=${PROMETHEUS_NAMESPACE:-unifipoller}
      - UP_PROMETHEUS_HTTP_LISTEN=${PROMETHEUS_HTTP_LISTEN:-0.0.0.0:9130}
      - UP_PROMETHEUS_REPORT_ERRORS=${PROMETHEUS_REPORT_ERRORS:-false}
      - UP_PROMETHEUS_BUFFER=${PROMETHEUS_BUFFER:-50}

volumes:
  prometheus_data:
    external: false
    name: prometheus_data
