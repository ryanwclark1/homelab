services:
  tailscale:
    image: tailscale/tailscale:${TAILSCALE_TAG:-latest}
    hostname: tailscale
    environment:
      - TS_AUTHKEY=${TAILSCALE_AUTHKEY}
      - TS_EXTRA_ARGS=--advertise-tags=tag:container
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_USERSPACE=false
      - TS_HOSTNAME=atuin
    volumes:
      - tailscale-data:/var/lib/tailscale
      - /dev/net/tun:/dev/net/tun
    cap_add:
      - NET_ADMIN
      # - sys_module
    restart: unless-stopped
  # nginx:
  #   image: nginx
  #   depends_on:
  #     - tailscale-nginx
  #   network_mode: service:tailscale-nginx

  atuin:
    restart: always
    image: ghcr.io/atuinsh/atuin:${ATUIN_TAG:-v18.3.0}
    command: server start
    volumes:
      - type: volume
        source: ~/.config/atuin  # atuin-config-data
        target: /config
    links:
      - postgres:db
    depends_on:
      postgres:
        condition: service_healthy
      tailscale:
        condition: service_started

    ports:
      - mode: ingress
        target: 8888
        published: 8888
        protocol: tcp
    environment:
      ATUIN_HOST: ${ATUIN_HOST:-0.0.0.0}
      ATUIN_OPEN_REGISTRATION: "true"
      ATUIN_DB_URI: postgres://$ATUIN_DB_USERNAME:$ATUIN_DB_PASSWORD@db/$ATUIN_DB_NAME
      RUST_LOG: info,atuin_server=debug

  postgresq:
    image: postgres:16
    restart: unless-stopped
    volumes: # Don't remove permanent storage for index database files!
      - pgdata:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${ATUIN_DB_USERNAME}
      POSTGRES_PASSWORD: ${ATUIN_DB_PASSWORD}
      POSTGRES_DB: ${ATUIN_DB_NAME}
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready
      start_period: 20s
      interval: 10s

  backup:
    container_name: atuin_db_dumper
    image: prodrigestivill/postgres-backup-local
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_DB: ${ATUIN_DB_NAME}
      POSTGRES_USER: ${ATUIN_DB_USERNAME}
      POSTGRES_PASSWORD: ${ATUIN_DB_PASSWORD}
      SCHEDULE: "@daily"
      BACKUP_DIR: /db_dumps
    volumes:
      - pgdumps:/db_dumps
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  pgdata:
    driver: local
  pgdumps:
    driver: local
  atuin-config-data:
    driver: local
  tailscale-data:
    driver: local