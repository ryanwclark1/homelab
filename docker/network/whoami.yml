services:
  # WhoAmI - For Testing and Troubleshooting
  whoami:
    image: traefik/whoami
    container_name: whoami
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["apps", "all"]
    networks:
      - arr_net
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.entrypoints=web"
      - "traefik.http.routers.whoami.rule=Host(`whoami.$DOMAINNAME`)"
      - "traefik.http.middlewares.whoami-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.sslheader.headers.customrequestheaders.X-Forwarded-Proto=https"
      - "traefik.http.routers.whoami.middlewares=whoami-https-redirect"
      - "traefik.http.routers.whoami-secure.entrypoints=websecure"
      - "traefik.http.routers.whoami-secure.rule=Host(`whoami.$DOMAINNAME`)"
      - "traefik.http.routers.whoami-secure.tls=true"
      - "traefik.http.routers.whoami-secure.tls.certresolver=cloudflare-dns"
      - "traefik.http.routers.whoami-secure.service=whoami"
      # - "traefik.http.services.whoami.loadbalancer.server.scheme=https"
      - "traefik.http.services.whoami.loadbalancer.server.port=80"
      - "traefik.docker.network=arr_net"

      # - "traefik.enable=true"
      # # HTTP Routers
      # - "traefik.http.routers.whoami-rtr.entrypoints=websecure"
      # - "traefik.http.routers.whoami-rtr.rule=Host(`whoami.$DOMAINNAME`)"
      # # Middlewares
      # # - "traefik.http.routers.whoami-rtr.middlewares=chain-oauth@file"
      # # HTTP Services
      # - "traefik.http.routers.whoami-rtr.tls.certresolver=cloudflare-dns"
      # # - "traefik.http.routers.whoami-rtr.service=whoami-svc"
      # # - "traefik.http.services.whoami-svc.loadbalancer.server.port=80"