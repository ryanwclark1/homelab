# Setup default propreties we want on all/most containers
x-default-container &default-container:
  user: 1000:1000
  group_add:
    - "109"
  environment:
    - PUID=${PUID:-1000}
    - PGID=100
    - TZ=${TZ:-Etc/UTC}
  restart: unless-stopped

services:
  jellyfin:
    container_name: jellyfin
    image: jellyfin/jellyfin:10.9.4
    volumes:
      - ${COMMON_CONFIG_PATH}/jellyfin/config:/config
      - ${COMMON_CONFIG_PATH}/jellyfin/cache:/cache
      - ${COMMON_SHARE_PATH}/downloads:/downloads
      - type: bind
        source: ${COMMON_SHARE_PATH}
        target: /media
      # - type: bind
      #   source: ${COMMON_SHARE_PATH}/downloads
      #   target: /downloads
    # Host mode requred in order to use DLNA
    network_mode: host
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    extra_hosts:
      - 'host.docker.internal:host-gateway'

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    hostname: jellyseerr
    environment:
      - LOG_LEVEL=debug
    ports:
      - 5055:5055
    volumes:
      - ${COMMON_CONFIG_PATH}/jellyseerr:/app/config
    networks:
      - mediarr

  # firefox:
  #   <<: *default-container
  #   image: lscr.io/linuxserver/firefox:latest
  #   container_name: firefox
  #   security_opt:
  #     - seccomp:unconfined
  #   environment:
  #     - DRINODE=/dev/dri/renderD128
  #     - DISABLE_IPV6=true
  #     - DOCKER_MODS=linuxserver/mods:firefox-fonts
  #   volumes:
  #     - ./configs/firefox:/config
  #   ports:
  #     - 3001:3001
  #   networks:
  #     - firefox
  #   shm_size: "1gb"
  #   devices:
  #     - /dev/dri/renderD128:/dev/dri/renderD128

  # duplicati:
  #   image: lscr.io/linuxserver/duplicati:latest
  #   container_name: duplicati
  #   volumes:
  #     - ${COMMON_CONFIG_PATH}/duplicati/config:/config
  #     # - ./configs:/source
  #     # - ./docker-compose.yml:/source/docker-compose.yml
  #     # - ./configs/duplicati/restore:/restore
  #   networks:
  #     - duplicati
  # ports:

  bazarr:
    <<: *default-container
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    hostname: bazarr
    volumes:
      - ${COMMON_CONFIG_PATH}/bazarr:/config
    ports:
      - 6767:6767
    networks:
      - mediarr

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    hostname: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
    restart: unless-stopped
    networks:
      - mediarr

  radarr:
    <<: *default-container
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    hostname: radarr
    volumes:
      - ${COMMON_CONFIG_PATH}/radarr:/config
      - ${COMMON_SHARE_PATH}:/media
    ports:
      - 7878:7878
    networks:
      - mediarr

  readarr:
    <<: *default-container
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    hostname: readarr
    volumes:
      - ${COMMON_CONFIG_PATH}/readarr:/config
      - ${COMMON_SHARE_PATH}:/media
    ports:
      - 8787:8787
    networks:
      - mediarr

  sonarr:
    <<: *default-container
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    hostname: sonarr
    volumes:
      - ${COMMON_CONFIG_PATH}/sonarr:/config
      - ${COMMON_SHARE_PATH}:/media
    ports:
      - 8989:8989
    networks:
      - mediarr

  lidarr:
    <<: *default-container
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    hostname: lidarr
    volumes:
      - ${COMMON_CONFIG_PATH}/lidarr:/config
      - ${COMMON_SHARE_PATH}:/media
    ports:
      - 8686:8686
    networks:
      - mediarr

  whisparr:
    <<: *default-container
    image: ghcr.io/hotio/whisparr:latest
    container_name: whisparr
    hostname: whisparr
    volumes:
      - ${COMMON_CONFIG_PATH}/whisparr:/config
      - ${COMMON_SHARE_PATH}:/media
    ports:
      - 6969:6969
    networks:
      - mediarr

  stash:
    <<: *default-container
    image: ghcr.io/hotio/stash:latest
    container_name: stash
    hostname: stash
    volumes:
      - ${COMMON_CONFIG_PATH}/stash:/config
      - ${COMMON_CONFIG_PATH}:/media
    ports:
      - 9999:9999
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
    networks:
      - mediarr

  prowlarr:
    <<: *default-container
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    # hostname: prowlarr
    network_mode: "service:gluetun"
    volumes:
      - ${COMMON_CONFIG_PATH}/prowlarr:/config
    ports:
      - 9696:9696

  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    profiles: ["core", "all"]
    networks:
      - t3_proxy
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8080:8080 # Qbittorrent
      # - 8888:8888/tcp # HTTP proxy
      # - 8388:8388/tcp # Shadowsocks
      # - 8388:8388/udp # Shadowsocks
    volumes:
      - ${COMMON_CONFIG_PATH}/gluetun:/gluetun
    environment:
      - VPN_SERVICE_PROVIDER=nordvpn
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${NORD_KEY}
      - SERVER_COUNTRIES=Netherlands
      - TZ=${TZ:-Etc/UTC}
    labels:
      - "traefik.enable=true"
      # HTTP Routers
      - "traefik.http.routers.gluetun-qbittorrent-rtr.entrypoints=websecure"
      - "traefik.http.routers.gluetun-qbittorrent-rtr.rule=Host(`qbit.$DOMAINNAME_HS`)" # qBittorrent
      # Middlewares
      - "traefik.http.routers.gluetun-qbittorrent-rtr.middlewares=chain-oauth@file" # qBittorrent
      # HTTP Services
      - "traefik.http.routers.gluetun-qbittorrent-rtr.service=gluetun-svc" # qBittorrent
      - "traefik.http.services.gluetun-svc.loadbalancer.server.port=8080" # qBittorrent



  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    # hostname: qbittorrent
    network_mode: "service:gluetun"
    # ports:
    #   - 8080:8080
    #   - 6881:6881
    #   - 6881:6881/udp
    depends_on:
      - gluetun
    environment:
      - WEBUI_PORT=8080
      - PUID=0
      - PGID=0
      - TZ=${TZ:-Etc/UTC}
      - DOCKER_MODS=ghcr.io/gabe565/linuxserver-mod-vuetorrent
    volumes:
      - ${COMMON_CONFIG_PATH}/qbittorrent:/config
      - ${COMMON_SHARE_PATH}/downloads:/downloads
    restart: unless-stopped

networks:
  duplicati:
    driver: bridge
  mediarr:
    driver: bridge
# volumes:
#   myMedia:
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: /mnt/media
#   myDlFolders:
#     driver: local
#     driver_opts:
#       type: none
#       o: bind
#       device: /mnt/downloads
